J%Pearch pretends to be a %Search!!!
 th:
  Textl indent fail use # c instead
 fr:
  Textl # c fail use indent instead
 sa:
  use me&za,R not R&za etc
 
mo:
  wait for a situation to build:
  Pave may !Live
 tu:
  %Paving probably wants %openey and %fully,
   unless it is deep within a pile, or the content is not needed
  &settle a bit
 wed:
  &settle backendery
 th:
  &settle
   nodes sense %current of belows
   the &settle returns true if not
  using &either_6|8
  %%dome
 fr:
  &brackstable_7, they %brackstable
  SummerCat/Jproto
  infinite loop: freeze very %brackstable wakers
 sa:
  &dome_S, %Jproto
mo:
  frosty bushwalk
  bump brackstable forwards attention
 tu:
  Y:n wandering through sections of w:$W
 we:
  &Yingbal
  &Zeve push Jproto an e:W:of
 th:
  &nodee %%e resurrect
  Jproto an e:W:of
  %Yingbal within each other
   < recycling R%awakens/r, not:
    < !eph after first, or per however s..s (slep)
 fr:
  %Aearch must avoid of:JaBabz
  of $D = dej(/JaBabz/enj($C))
  Js&top is oscs idea of n:C etc
  &dome_S make strong el:2 &dome_traction
 sa:
  &settle: comeback if !%sleeping
  W.js
mo:
  %Jrunto &dome_traction each plan
  saving $W + <script>
  brackology: %%dome separating groups
 tu:
  more/less Yingbal display
  %SummerCat
   %Jrunto: end-end shuntography:
    %Jproto if &Jproto_done
    retry until brackstable if async
    < once more for errors?
     < auto-research that can happen.
      < the B stack
   %Jproto: %%eto:Travel the dones
  &Jx in Jproto
 we:
  %Releasor 5ing
 th:
  %Releasor -> %twin
 fr:
  dental
  irl showing it to people:
    must have almost everything to it
 sa:
  %MayGhost groundout Re:*, are also &Yingbal
   fabricate $W/5 (or it is $W.u?)
  &nodeo may input
mo:
  waketha, climbing
 tu: 
  %%waits,wants:s -> Ying wakers += s
  &sort_wakers:
   $later any $wakers that &settle another
  %Releasor diff/push
 we:
  &ballLines climbing s, knowing R
   for %Gens/%Zave (%ball<->W:$t)
  brackstill recurse to n = ns&n
 th: 
  %Paving cha -> Gump
  &waits_8: keeping waves of $later til !$wakers, filo
  @Story: when quiet
 fr:
  little bugfixes
  %May* & %twin minimise &settle,
   climb faster, drop %actey
 sa:
  getting laptop powered
  note shuffle
mo:
  $from &wants,'msg'||c,$to -> %%waits:$msg,wants:$to
   < $from -> $later? test the effects
  &Yome for C accumulatings
 tu
  misc:
   Wud: less polling digway, should never need to
   Textl: spurious !plant-in-the-lobby ish
    < Jay missing 'n 1' in Glimpes chunks debug
  &Yome logdome
   wakers[brack+]
 we
  Yingate piles
 th
  %nokids for %ball (must be &bal)
  Yome has methods += stream,
    does Yong...-ov rewind
  %wakeful defies %onlyish sleep
 fr
  detect more e around
 sa
  chickens v dog
  %Storystream + %Plot
mo:
  -rows from groupology
 tu|we:
  Natalie geburtstag
 th:
  %Story spec
  %%quiet,wake
 fr:
  me&indot adapted to make node pile
  %Nodar spec
 sa:
  party

mo:
  fixed Code unopenable: the &indot sy&Org is c.O.substr(1)
  Nodar &X_t, &X_s: -vat tpath
 tu:
  powerchord fail
 we:
  powerchord ok
  tidyrealise everything
  -n point there
 th:
  %Stories as a %Paving cluster
  %TheNine
   matching (&twlic) exp<->got over time
   being &sleepic
  &elpack part of &Yinge,
   &Dtunneling finding the packed e
 fr
  %TheNine e:Accept do
 sa
  Nine%sleeping rolls the invention of Eighi s
   eto inside each other sleeping seems ok
  leave eg Stories/Stori%adhere.twmt=Stori
  Nine/Eighi ducting with &toPave
   pushing the only way to diff, until:

mo################
  < auto The/vv -> The/Lingo? the Know tour
  < The differencing exp if ~%dige from Stori
  < sub easy ioings
  < adhere brackology mute
  

Yingu and Story
   Story finish, groups Yingu,
    tests with their &waits_8,
    lv of the s changing
     as osc visiting its C
   Yingu live/playback from &waits_8
  
  < put more id in &settle row
    esp on the %%waits,wants of &settle_7
  < &settle_7 notices when new version == a pushed version (%%for:settled)
    eg the regular %Pave!ready bothers %MayTwine &settle Know..$s
  < settle upward with %onlyish, eg %MayGansp <- .../%MayTwine%%thing
  
  < Story<->Gump, soft &settle everyone else
  < make go:
   completing the circuit, meanwhile:
   
  < new &waits_8 should fix at least half of:
  < test up:
   < wake on el:2|9, $s/$n pointer to the not yet node,
     so %twmt adheres from $s to $n
      see Rs&numberclicked
      < %Peace: assemble types sleep-agnostically
     and then %%eto:1,tw... gets to That
   < then To..$n comes back,
     having pushed itself to $later
     or having subscribed to changes to That %tw
  < sy&twinned, forget $p
  
  randoms:
  < %%eto clickshunt pseudosurprise
  < %%acty?
  < &Jx modulata
  < doublethrow: show first stack
  < try/catch when we Ring a whole step at once...
  < brackism, eg %%may:input
  
  %Yingu
  < adopts %Nodar, when its not lining up with something
   < realtime nodes waiting/waking
  < exploding certain elements from within Ying,
    making rows, adjusting layout, scale
    &Yinge
     < coinciding &Yinge not lost
  Fingo/%Yingu%Abodis
  < %ball folds, aggregate "all ok"
   < brackdiff/%acty pop out
  < conclusion: bleep, bloop
    make go round nice
   < explain/control in %Abodo%Yingu
     sliders for attention span, energy
  %Abodo%Yingu
   flashing lights
   pause, circuits, unify brackism
   way to consider the dome before running into it
  %protoJ
   whole new all it takes:
    u mixing from @Search intake
    doing with that
     A &throat, &Ying or &Ring
      A-thing sets up A iterator @o2-@1
   with %Ying we may:
     display as a thing|thinkypile
     display as an appearance
  
  %SummerCat:
   for compiling nice code again, I:[neusiolaND]
   < for a Story (Gump actuation)
    < shrinks away eventually, contibuting:
    < runtime, several scales of it,
       as a %Yingbal (interactive) thing,
       as storable encodings of them, (&Ste*?)
      to become test data
      < %Zif wants to know how to work them
        runtime diffing
   < testrun etc
     also scooping up extents of Yingu smoke
     < debug Jpara+settled+testmode
       might be html
   %Jproto:
    < fix sometimes dupe %%eto
    < 4s&callback - possible override e
     < then handling the onclick event,
      < new Display inside
    < carve off history: Rc&b, yfuture...
      begins:
       J located in bc&sc&J (if Y:n)
       Rc&V is local history?
        dialect of two variables:
         in A, a J
      how/when it applies:
       J callback all inside R, as if Rc&N[0]
       Y seem good
        replace their previous syY, which was Yc&b?
      will need:
       Index climbing
    < Te
   %Jrunto:
      < Y:n the grounds, so they can mind
      < Y:u configures dialect, etc
      < Y:n,S, with try/catch liberally
          S for wandering through c&pin sections, domily
     
  Y|A
   leaving unfinished
    throw:
    < should be detectible (Ac&T.act?)
      aborts everything until catch,
       non-descendants, eg A:n continuing A:slow doing A:doing
       may not garbage A:slow. depends on lineage?
    T.hwack:
    < requiring the enclosing thing to know about T.hwack
     < or becomes a throw
   may be used in %Yingu to create works that may be done,
    eg encoding a certain way,
    displaying more stuff:
     giving an output Re-cipe, like &%Yingbal
  
  
  Index:
   < drains %twin, etc
   < for Q.c.* using &fiu for:
  @Near:
   Q<->P again, proxy or http
  @Search:
   < using of:js again. add dige lookup?
   < of:w 404 should el:9
   < Search:wjs should never think theyre ready if !wc&code
   &Ghodig:
    < cant update to a previous version
    < latest wjs:Yingmas if Know...wjs:Yingmas
  %Pring
   A bunching of things heading into them
   %Slope to see
   < check bunch of P are ready, wait max 2s
    < can speed up Qready (thing for batch) -> Qup (batch)
    < e:pull returns when ready (@Search Qup coordination)
     < G&t adopts %Elvoids it asyncs with (%JRom 8)
  
  < brackology tunnels?
   < %%dome as the most-separator
   < open column nicer
   < show %Aearch/@Search Ghost,
      args put later than t
      Ghost/$of should know its index:
  < singular %twin (index of eg of/args/t)
     
  
 CodeCode
  < dream up something simple
   Steps Dome
   / means z
    to complete & test a bunch of features:
    < %Code pointer more infinitely
    < allowing rearrange of W:g-j as list of $t
    < weirdness erupting, normal quiet
    < A == R, etc...
    < sending patches to your Search host,
    < jsba, tested against everything imported,
      and all remaining js code...
      < need.js for linenumbers: ServiceWorker might:
        return new Response(null, { "status" : 200 , "statusText" : "I am a custom service worker response!" });
 
  < Words:
  < track <
  < boost<0 that ope=0.5
     the bit of nothing next to t being half it
  < not
  < hsl l is not dark enough
  < the %ein(C) interface for %_ting
  < ch()/G&c says harvester, put in A
  < me&way + Search from the top, its own mundws
  < me&t should know about ways inside ways
    most of them will static args
 %Slope
   finds neighbours
   the center of the findables
    %ball, %Cit, %Zavmo types of sprawl
 %Differ <- Textl
   text relationising lab
    defines %Here<->$P
     how to push, pull, what changed
      how to i/o or patch bits of them
    breaks down patches
     important lines leading into what changed
     chunks compare with each other,
      to get moves as low diff gone<->new chunks
     chunks accepted as forms
      for more chunks to be more acceptable
        when the same ish change occurs in many
      2 chunks should show the most residual bit of identity
    sees t y c sc amounts
     such that the same code works any model:
      %Code/%Line/%Ch
       everything slightly t, the name of something
        esp heading positioned, rare words
       c more the syntax
       sc the knowables
      %Cit/%nkness/%gkness/%someindexes/
       bits could be found in the code
    make steps for CodeMirror to unfold subdocs
   makes pointers into code,
    is wanted for:
     %Codo search, %Abodis pointers
     %Code unfolding
   logisticises processing:
    Babz translations resyncing parts
   know %keyword
    or the ones from such a Ghost
    &ind-ing for creativity
   chatbot
 T
   another thing-ink dripper:
        #        $he = Rc&N[0];
        #        $i = hes&inti = (hes&inti||0)+1;
        #        me&tsc,'%Zave',i+'th','y';
        #        i == 2 and debugger
Zave
  ghost not auto direction flipping?
  might be coinciding push and outofdate...
cm
  folds open/close antiscroll
  likes <100 lines on screen
   < not Infinite height?
  ambient state checkup
   shui:casual cycle wants insurance from ...
  keys:
    Tab in \S\) should jump over 2 characters
    e:A+* elvis while paused
     something for tagging the line
  later:
  < regroup Foogla etc by %Code pointers
     curate into G/
     with similar to %tracting el:9 (drop) etc,
     wanting the human to go through it all
  < move over there, then much later:
    < import git history, as if names the whole time,
       and a W:j about the fractions/order of them
      bringing back Opera-era perl for elvising W-orkers
       and all the output channel plumbing etc
      `GIT_AUTHOR_DATE='2020-02-29 16:01:02+1200' git commit`
  