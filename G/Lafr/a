J%Pearch pretends to be a %Search!!!
 th:
  Textl indent fail use # c instead
 fr:
  Textl # c fail use indent instead
 sa:
  use me&za,R not R&za etc
 
mo:
  wait for a situation to build:
  Pave may !Live
 tu:
  %Paving probably wants %openey and %fully,
   unless it is deep within a pile, or the content is not needed
  &settle a bit
 wed:
  &settle backendery
 th:
  &settle
   nodes sense %current of belows
   the &settle returns true if not
  using &either_6|8
  %%dome
 fr:
  &brackstable_7, they %brackstable
  SummerCat/Jproto
  infinite loop: freeze very %brackstable wakers
 sa:
  &dome_S, %Jproto
mo:
  frosty bushwalk
  bump brackstable forwards attention
 tu:
  Y:n wandering through sections of w:$W
 we:
  &Yingbal
  &Zeve push Jproto an e:W:of
 th:
  &nodee %%e resurrect
  Jproto an e:W:of
  %Yingbal within each other
   < recycling R%awakens/r, not:
    < !eph after first, or per however s..s (slep)
 fr:
  %Aearch must avoid of:JaBabz
  of $D = dej(/JaBabz/enj($C))
  Js&top is oscs idea of n:C etc
  &dome_S make strong el:2 &dome_traction
 sa:
  &settle: comeback if !%sleeping
  W.js
mo:
  %Jrunto &dome_traction each plan
  saving $W + <script>
  brackology: %%dome separating groups
 tu:
  more/less Yingbal display
  %SummerCat
   %Jrunto: end-end shuntography:
    %Jproto if &Jproto_done
    retry until brackstable if async
    < once more for errors?
     < auto-research that can happen.
      < the B stack
   %Jproto: %%eto:Travel the dones
  &Jx in Jproto
 we:
  %Releasor 5ing
 th:
  %Releasor -> %twin
 fr:
  dental
  irl showing it to people:
    must have almost everything to it
 sa:
  %MayGhost groundout Re:*, are also &Yingbal
   fabricate $W/5 (or it is $W.u?)
  &nodeo may input
mo:
  waketha, climbing
 tu: 
  %%waits,wants:s -> Ying wakers += s
  &sort_wakers:
   $later any $wakers that &settle another
  %Releasor diff/push
 we:
  &ballLines climbing s, knowing R
   for %Gens/%Zave (%ball<->W:$t)
  brackstill recurse to n = ns&n
 th: 
  %Paving cha -> Gump
  &waits_8: keeping waves of $later til !$wakers, filo
  @Story: when quiet
 fr:
  little bugfixes
  %May* & %twin minimise &settle,
   climb faster, drop %actey
 sa:
  getting laptop powered
  note shuffle
mo:
  $from &wants,'msg'||c,$to -> %%waits:$msg,wants:$to
   < $from -> $later? test the effects
  &Yome for C accumulatings
 tu
  misc:
   Wud: less polling digway, should never need to
   Textl: spurious !plant-in-the-lobby ish
    < Jay missing 'n 1' in Glimpes chunks debug
  &Yome logdome
   wakers[brack+]
 we
  Yingate piles
 th
  %nokids for %ball (must be &bal)
  Yome has methods += stream,
    does Yong...-ov rewind
  %wakeful defies %onlyish sleep
 fr
  detect more e around
 sa
  chickens v dog
  %Storystream + %Plot
mo:
  -rows from groupology
  < io meshing the scrambling C
 tu|we:
  Natalie geburtstag
 th:
  %Story spec
  %%quiet,wake
 fr:
  me&indot adapted to make node pile
  %Nodar spec
 sa:
  p
  
  a
  
  r
  
  t
  
  y

mo:
  fixed Code unopenable: the &indot sy&Org is c.O.substr(1)
  Nodar &X_t, &X_s: -vat tpath
 tu:
  powerchord fail
 we:
  powerchord ok
  tidyrealise everything
  -n point there
 th:
  %Stories as a %Paving cluster
  %TheNine
   matching (&twlic) exp<->got over time
   being &sleepic
  &elpack part of &Yinge,
   &Dtunneling finding the packed e
 fr
  %TheNine e:Accept do
 sa
  Nine%sleeping rolls the invention of Eighi s
   eto inside each other sleeping seems ok
  leave eg Stories/Stori%adhere.twmt=Stori
  Nine/Eigh ducting with &toPave
   pushing the only way to diff, until:
mo
  The receives %%Fin=got,dige, then inits:
      TheTest never sleeps
      TheNine may sleep
      < unless it sees a got~%dige
      TheEigh wakes on got~%dige
      < The(|Test|Nine) should forward the %%Fin inwards
        Plot may engage several TheTest,
        partition types of activity,
  Stories/Stori/Eighi live into:
    The/TheTest/TheNine/TheEigh
  TheTest is %Zave-ish
   down|upload self
    P for W.* el:9 may %suggest_species if W.1
     for %Paving to %fully
  use exp, make ok
  < TEST study %ReNine weirding Paving|nodeo:el:2 aeroplaning:
   < &settle,notyetanode seems to work anyway?
   < %Paving sometimes waits:!always%Zaving near el:2?
   &node_issleeping yfutures sy&R for not yet &inode
   &zaa passed p(c&sy&R) should handle p%sleeping
   not halty once &nodeo connected
   < takes a long time for Paving to get back
     < see '&settle_7 notices when new'
     < %Paving can avoid the settle-onemore
     < %Paving &sleepic when settle-above
        &settle all Stories/Stori/Eighi is a lot to ask
         study this when Nodar sweeps
      < Search just before ttl out? lots of Paving noise
 tu
  Code: &onbigpaste: fold pasted only
  accept* -> Paving, the harness
 we
  Textl: &Linets,t,s,d makes the t%dige%string = &enL,s**
  Eigh diffs:
   pull in full Stori with &moreThat
  party
 th
  no Story/* until done beginning
  &selfThat updates selfy&Live when pushed (%%acceptable)
    reselfy Nine must pull pushed (self not updated in place)
 fr
  Plot+Story:
   Plot plays with how to ... the stream
   stream groups many -eight:
    before (as) every quiet wake,
     which does stuff, finishes -eight-2, then:
    after every quiet wake,
     without quiet waking again,
      unless the -eight looks complicated,
       eg caused a bunch of test diag to open
       and we are expecting it to settle
  quiet,wake:Story then Story/This
  %%acceptable reself|other cooking down
   < further backing away into Y:Self
 sa
  &acceptable matter, &Accepting permit
   < TEST Push* not pushing R
  &readyok here==there
  %ReNine%unity+%eph can disappear afterwards
   < TEST or infinite loop, noded no longer
  &twinThat to &toPave a &reself
 su
  Wud under control errors as 400, decode s.er -> %Paving
  &ipipe
mo
  nodey brackology mute
  This%%pause after beginning
 tu
  make overall quantography from the many -gate
 we
  hide its gates, but use them in:
  -four makes -legs: columns without order or association
  nearing startup:
  This/* %%Having -> The/Test/Nine
 th
  one click Peace+JRom reset
  checks 1,2 as 3
  avoid e:elQups about Pavings ready
 fr
  Outlog += -log, about e:elQups and when they &t
 sa
  4s&Searchttl = 3600 makes determinate
  
  
  etc
mo
  wake Nine when Checkable complete
  e:Qup ignoring, helped with:
  impassable timespace schizm (and town), then:
  &unpacke using &Xt to find R in Ic&b:
 tu
  re Plot/Point
 we
  re Plot<->The
  fix Page maths re %%Checkable
 th
  Point%ok can &sleepic
  < &sleepic %Stori%Paving faily: test with details:
    %Paving can get simpler &settle:
      for:onemore not needed? only !waits?
      for:above can %onlyish
  < &unpacke: pass e%terms packed->pointed R...
  -eight is
  Sch_emas replace Yingmas-like (how to -Four) with pi
  s/Sch_emas/Pictures/
 fr
  -brackology is, D/**, group|ology ness
 sa
  -pitsology -> -legs -> -four
  tinc funcs: &exts, &expe, &ex2, etc
  
mo
  tiny funcs end in arq() 
  avoid e:breeze er:NOb, put Codap%init_breeze
  -ology sub &labelt
  -seven at both ends,
   sub &sopi to self|other
 tu
  &togcon:
   everything missing mode
   refactor for .$pt serves .$ok for $p**
 we
  &togcon style from &rolltog: bri:0.5 when closed
  &rolltog uses &rollbs,R,[k] since k may comma
 th
  see Index &togcon
  subtle changes to Plot/Point
 fr
  This%%listening gone
  for Plot%%Nine for L%Nine for eighty&Point=L
  %%Having,eight for Nine/*%got
  < TEST see 'Eigh wants:gotready is very important'
  %%Checkable...+Eigh,ready,ok back to Nine,
   which L%Dome..Eigh (eighty&Eigh)
  should now be able to:
 sa
  &twlim splicing right
  bump into Easiness, etc
mo Aug 10
  &dome_traction: allow multiple per R
  &pivat: r is from the inside, for %eph
   < up from r or s... shortest path...?
  %eph stays on: &reaw..1: without suggesting tunnelable
  
  $t editable, as:
  Nine/$t!%eph mingled with %eph!%exp
 tu
  logtruck rearend
 we
  &Storystream: not past Ying%Det
   Ying/Story/This was @293 before Ying was @296
  proto:
 th
  the -eight of %%seven shows .t being '0'
  hiding|not OK -eight: 'zy&on_ok'
   -eight/-ology talk of hiding a bunch of anythings
   puts -eight/$r back to dis:1
   < un-eCsc things back to what they were
     wants to be A imposey, e in osc subsystem
     &| probably not remembered &togcon, etc
 fr
  L:Fugue after Failing %checking
   !ok:
     L-Fugue sinkhole, pause til commit
   then ok:
     L%resumed do an auxiliary L%ok, &then
      avoiding &reself not flowing
 sa
  search for /Fugu/ to find scattered traces of:
  ch%checker=L once %ok unblocks L%checking=ch
   Point@38 controls %%Checkable --> $eight
   $eight decide to %Fin
  Plot/Point generation from something resembling Nine/*
  L%checking after each Nine/$t spec
mo
  L%checking avoid %%Checkable
  L &then &atPage consum()
  brain fade.
 tu
  get to use that new Nine
  set L%Page_in to ignore a dome of turnaround
   eg le-5 after L%checking
 we
  town mish
  use &yyt for Plot hooks
  load all Stories/* The%very_first time
    and then reset
  eight notice being %%Ignored (no L)
 th
  the eight after acheck being %%Ignorable
   < the Story zipper having its own checks,
     eg either %%Ignored or %%Ignorable
      should end up with both
       by the time the next L engages
  quiet the eto 8 spam
 fr
  &Effect begins
 sa
  &Effected to &togcon
mo
  shrink minor eights
   %%ope to become ology%ope
   &togcon as the dominant %%ope
    < to|from test data, with|out the from (annealing)
       from having computed that %%ope,
       which it could be shortened to
  < &Effect self|otherness
     &ologise that knows ~%ope event horizon
  ah() may in .c|y, hash at the end
  &Effect in practice, sometimes &wants R or &zaa R
 tu
  %eCsc applies after %rowish
  more &Effect
 we
  âˆ€ - for-all (fill out insurance claim)
  move &Effect -> w:Dome
   < frontends eventually -> w:Jay
  Nine/$z%desc etc should persist when &reself
 th
  some nice code tidies, THEN:
  attempt %Fugue%resumed, but nah
   < rebuild when fastering, partition %%wants etc?
     not getting %%Checkable before able to quiet...?
 fr
  Page rename|number between Nine
  L gen from exp
  just get linear, make new ground
 sa
  non-first Nine autoviv
  Dealap%SummerCat makes wjs
 su
  Arena

mo
  sh1
 tu
  want to log Jrunto state...
 we
  town sing
 th
  transcription = {G: 'C', C: 'G', T: 'A', A: 'U'}
  cannot L%ignore%enNine, needs that nothing-Page to set Ploty&namePages
  %SummerCat:
   -log each run
 fr
  split up &Plot_Default
  -brackology: constrain string size
  see '< Around-ness until -pipe good'
 sa
  %SummerCat:
   Outlog types of -log with colour
    eg %Jrunto read+write a dome of work
   without 'vovol' (Nine/t%Go first):
    make a startStory to ignore
   %Go will &Pageturn_suddenly
    getting us beyond the Point++ etc
    then, Travel receives %%Go and starts Dealap
mo
  waits_8 noticing later[] etc woke this time
 tu-we
  thinking,
  c
  a
  r
  
  c
  h
  a
  o
  s
 th
  of encodes things
 fr
  so,
   %Story
    noDisplay -seven
    wants start|stop
     FAIL:
      not A-ish enough to delete node** from:
       pending Yingvoids
       being quiet_wakers
      the things connection to the top
      reveals self or other
mo
  %Story may remember to %play (not happen)
  %Travel/* may %%Go to %play to %SummerCat
  %MayTwine use $z to find $K
 tu
  &extrainitbump: KLUDGE first %%quiet_wake after refresh
  de-tailspin 'bump Ghost when s/** settle'
   %Gumptio:
    &baleg for stages of a process
     seems to &nodei retract ok
    %Gutwin checks linkage, %dige
 we
    %Guten pile of error
     from %%twin
      < after the first Ying%%quiet
 th
     car gone
     %%twin may be %%broken
     %%cluey -> column
     always 34 minutes late
 fr
  %twin # avoid initial everything %%broken
   %nofurther while remotes gather their %%twmt
    < with a %%waits,later, might fix:
   bump if all %%broken after refresh (somehow > reset) 
  Gumptio suspends if Storyy&running
   seems to be two Story in one -seven now...
  
    %Guten pile of error
     becomes quite ugly
     row breakdown
     < group by nothing?
mo
  new car
  that %%cluey,s=$K,...
 tu
  u/n of @Guten
   un %%lost el2
   %%lonely el2 or %%mot=3
    < pick the most likely Travel/$t (w/$K?)
   %%mot=2|3 for dige|el2 things
 we
   &columns
   %%mot into:
   @Gutago
    first %%Go into:
 th
  Travel/$t%%Go
   can turn off with +%Shouldbeempty -%SummerCat
  @Gump
   is weird to start, reset ok
    < togcon hard|soft on|off Gump|Story
      to see why
      quiet_wake surely part of it
    < Story could be used to make Travel/$t/$expr
      for whatever might Ying_8 async,
       eg finding when a certain Duolish/$tid turns up
   @Goting
    %%Go -> Travel
 fr
    &version_efroms auf. &brackstill
    -six makes a string drawing
  @Goting
    receives %%Goable=$t mixed with $h
     $h bringing changeyinfo to tell if ~u
    they &version_efroms for ~u
    %Bat lifecycler:
     permission
      ~u may $tid++
 sa
       diff D <-> Dy&parent=oD
mo
  Story on %play, per A.4
  Travel/$t/$tid%SummerCat%client=$t
   &Jx names %client:clienting/* and %client=$t:client
  timer delay @Gump for a non-early @Gutwin
  then just always @Gutwin%wakeful,
   does it sometimes, so back to a timer delay.
   wanted to:
   < Story debug moment:
    see '< double-check @Gutwin the first time'
     forgets to %%wants:@Gutwin, goes straight to:
     comeback (%%waits,later?)
   < %%waits,later:$actycv
     appear some time after @Ying looks ready
  @Goting
   &historicalise
 tu
    news first, tidy
   soft-groups - row.joining
    Babz quirk: row.left ||= (EXPR?...:...)
     brackets or ternary EXPR will eat the or EXPR from ||=
    -brackology
     < taking column demands, put all others under
     < automatic column supposing,
       some being sheer space to put more Kn
     < say Kn.t only when not of the column
 we
   %%Go
 th
  get %twin init reliable
   with no &elvis, was cutting %Gen/%Zaving out of history
  @Goting
    -> @Gome/$t v$tid
 fr
  @Gome
   watch Releasor arrive
   &lock Gump, holds dome:feels
   &diagno responds to each q=(%%fault),... once
 sa
  twin|tw nodeo made clearer
   handles sometimes %%broken
  @Gome -> Zave can push? or haul?
mo
  < leave haul? somewhere
   < wants a robusticle to handle those occasions
      eg sy&startsavingonce,
      and noticing when we have a sleeping would-be %Zaving,
       is when we wake:%Zaving and continue into Ying**?
        could %onlyish that?
      Story would be great at this,
       given columnar -sevens and Nodar lasso
   < %%Releasor back
      grab moments of:
       may Story prepare
       -> Travel..
       Duolish:
        arrives, bumps till:
        ready,
        
        push,
        pushed
          %%cha capture what we did,
           to pull it out of noisey environmental %%cha
        
       save W
       Paving adjusts %%cha, maybe new 
   < &unlock
      Zave%allope rolls until switched off now
     or packdown,
      asap or before push
  
  < auto show twine %%thing!%%extra %string <20 lines
    when not auto pushing...
    
  @Goting
   updates or user can $tid++
    may cancel run & restart another
     or, keep run, merely +T within %SummerCat,
      to re-@Inc those changes,
       probably saving the same W
       as if done from the top (new A.4)
        < notice if it matters (J&el:2|3) in spare time
      leaving update streaming pipelines
       in place for a while
  
  
  Travel
   < lie and times
     going them
      perma diff interface
        Dy&parent
        is nearly &Accept again
         with an &Effect that drifts on the %%Go
         and then establishes instant pause,
          graceful teardown, etc
      T may $tid++ and|or engage Story
     %%Go -> Travel
      if $tid++, cancel run and re%Bat
     Duolish <- %%SCing
      suspend @Gu* while pushing
      commits $z|$K in To|That and Ghost
       Know are a mot:8 once all Ghost for it are the new version
      notices gone $z
       makes gone unless run is %%noncanonical
        @Guten %%mot:9,nomore:$K helps %%lonely el9 $K
    
   < turn on elQups again,
      or have a one-click W bump
  io
   < i $su/@sum y o $sum:sum/**
  cm
   < mode/perl/perl.js:700 ?
     to only select this of $this when dblclick
   
  Story
   < Story invoking for @Gump..$tid,
      or any time|thing
       Story takes %%Go as a thing to test,
        it could be an &Accept back in @Goting
         or some wakers[] to resume
          < wants &waits_7|8 redone
            should act the same,
            then add info trailing into the thing
             inc reason, T.act etc
        knowing how to &accept|init it when ready
      as opposed to Ying beginning
     or we are being invoked to catch on to what is
     which should be pretty quick...
     %Tool for moment nab, etc
   
 <<< Guten Story:
  @Guten is a -groupbrack*,
   making shared things span rows
   reducing to just a few words
    a limited view of some rows
    expanding into -pi as clued
    or mind/world breakdown
  
   < %%may:el2
   < That...%P == Know...%P is n becoming u
     or it read/writing itself
   < That want pull if others write it?
  
  @Gu* prescribes a Travel/$t
  
      
    
    < Duolish get abandoned, tidied
      poke if quiet...
      
   Know..$K commit once all Ghost..$z are the new %dige
     
  @Gump prescribes a 
     That..$K commit when pushed
     
     
   %SummerCat has no Ying inside,
    < assemble a J-centric alt %Ying
      then should be able to inside all outside processes,
      by deceiving Nodar that they are where they were
   %Compiling:
    sit there with %Paving listening
    makes %Bat-ches:
    - build (%SummerCat, w:of)
    - save (Duolish)
      or restart batch if u not as it was
    - websocket push updates (e:elQups)
      via /chat/$room
       with a first line that goes $from\t$to+
       $from becoming routable down that socket
       then Lines (or whatever) from there onward
      of something mixable onto the previous version
   %Bat:
    has an act (build,save)
    a validator (u still as it was)
     may abort or reinstruct act asap
    then success (push updates)
   %Tat:
    what of the machine
    so it may be injected with ...
    eg hijack Ying_8 when such -seven-ness
   %Tea:
    reantithesised &t
    making the basic c&el receptivity...
    inverted c+sc?
   %Twi:
    that joinery of %twin
    an Index thing
    so is rebuilding it, diffing...
    
  <<< Story sitch:
   break? possible and happening
    on %SC &Yingbal - the interesting thing logger
     would rather be interpreting:
    from any -log, -gate etc?
     
    probably just to &Pageturn_suddenly
     or fully %%quiet,break to also allow Storying
      until ready: Ying_8 resumes
    implanting them should stretch L%Pages (gen from $t)
     and make $t/$expr to accept (autosave until)
    then $expr inherits to the next $t,
     maybe the next L? (checking between)
   entirely new @Search
    %Jproto and Story bound while waiting for responses
     test of:JaBabz asyncs all the time
      have to be reset over the first time
    
   
   Tare:
    repel into machine room,
     each stop knowing how to replay to that stop
    asking above about each thing that turns up
     &togcon including A, etc
    &tar: c,sc find a thing, also asserts
     c=t - may use W-context (%director)
     c=of,sc=t -> c{of,t},sc:{} - not W-con
     c{of,t},sc{bp} - %bp=SomeBreakPoint
     c=$W,sc{Y} - some $W (A.4/$C) having **//$Y
    where the c are matched exactly,
    sc may be anything identifying,
     or el denotes an act
    rowc&z=[bracks,its,inside]
    rows&z=[rows,inside]
     bracko should go into them ^
     so &t can eventually use many indexes...
     brack meaning a row with a z...
      suppose they can be bump-versioned with brackstill?
      and check each way up until out of ~A,
       in case the whole brack is replaced and nobody told us
   suggests savepoints:
    eg each time %Jproto -> %Jrunto
    could dividable $eight, know when to %%quiet
     this be a Nine/$t/$e? T-roomination
    they could be looped over
   
   things
    test ex() and so on
    chunkify some code
     lex code defined and use
     sort Yingmind and Rmind bits,
      show when they are called
     %CC - CodeCode
      needs gone-able nodes
      ack
    -pipe - a self|other tool
     re stylepile, etc
      some tunneling only for Display?
    %Ear to the ground (new %Search)
    -lv - hoist stuff for Display
     show %mundws, %Search being subjected
      worker threads
    Display:
     receiving -lv for it
     
   Aearch
    wants to be a brack compositor
    &t reads rows, gets confused or allows multiplicity
    
  %Story:
  < &Pageturn_pretendnow
    getting us beyond the Point++ etc
     by sweeping it into the previous Page
    is really about L&init happening before its first Page does
    probably forget it until there are pockets
     of language solving at different times
  < Around-ness until -pipe good
   Around having its $W/*: %Paving/%Caving
    for clicking which one to be Around%head
   and each $W=Stories/Around/Nine
    with /time-trail of runtimes
     to insert to on Plot%alldone
      and each Nine/time/$L-trail also (point space)
     select $seven-gate deltas..?
     'hoist deltas, to prove faster when'
     < fades stat compressily
     < with ghost versions, lv-compressily
  load recent Around-ness
   push|pull Around%head->/Nine%about ||= ['vovol',Nine.t]
    do on startup if %auto
   these %Paving should anyway be faster
    also the wandering Nine<->L init
   a new first thing to do (was W:vv)
   no checking until L%main passed
  hoist deltas, to prove faster when:
  noDisplay $seven
  
  
  receiving %%Go to start a test (become Around%head)
  ignore any $eight in a L%Fugue or L:Wander
  $t/$exp - something to unpack unto L|Eigh
    'repel into machine room'
  $t%erm - error margin, fraction of lines diff til !ok
   < ignore ^\s+(\d+)\t/
   < makes Test non-canonical,
     to run through without noise daily
  
  -Will intersperse L, gen Nine
   will to ignore 'beginning', only Easiness
   will to repeat to measure for determites (Dif)
    inc eg such R-time matters or not
  Point_ology|ness
  
  Slopality figures a Point-show for any Point-related thing
   and some types to assume flock
    A Cardinal Number is a number that says how many of something there are, such as one, two, three, four, five. An Ordinal Number is a number that tells the position of something in a list, such as 1st, 2nd, 3rd, 4th, 5th etc. Most ordinal numbers end in "th" except for: one â‡’ first (1st) two â‡’ second (2nd)
  labelling things properly?
    new Nine resets eight.t scheme
     i.testname.i
    showing joined info shaded...
  gen Points from exp,
   having check:2, add next Dome if unclaimed, etc.
  &t outulism:
  use
  require 
  Cit tiny mode: s=0 shows up as ?
   
  combine Jx, inode, acting
   see '< all this in one:'
   TheEigh wants to be &acting,'Eigh',
    this could be 'The^Eigh',
     similar to the way css names shorten,
     except this would keep the later part
  
  Stories/*
   going async, when init:
    causes a says:Q-0
     each found causes 20 lines leanience $t%erm
   being unpredictable:
    when loading Stori:Easiness from the start
     Plot%Te will keep it around
    so we would know the exact nodes,
     to grep out rows including them (before serial numbering)
     should mostly work?
    <> from only knowing 'extra nodes in Stories/',
     might have to -vat early (can be per ref?)
     or diff re -n back to 'extra node'
  
  for speed
  Plot%Te may specialise how to run, eg:
   loading Stori:Easiness from the start
   
   how often to stop and check answers
    beyond L%Page_out
    which sends %%Checkable around,
     or -pipe can other all the work to get -eight
      and make Eigh seem %%ready,ok to Nine without visiting it,
      
       
      such that a trip to Nine then thinks Eigh...%%ready,ok,
       without visiting Eigh
     starting from the other:$L, 
    
  $t%fourdige:
   able to check only -four
  $t/-four:
   could limit/exclude certain rows,
    or rows with such node, etc
  $t/-tail:
   the last few $seven on the page,
    in their own -eight|-four
  
   < -four+-seven noticing when %%steps covers all steps, etc
  
  < create an adjustible regrouping,
     for a running out of space for Xrefs
    save %togcon for it
  < do that -group* test in a %SummerCat
    word crossref, sorting out the aspector:
     me&Kmish,Z,{for:'K'}
     maybe it is a &ha server?
    then %togcon savior
  
  < fork Abodo, get this working on modern chrome
    is mind othering
  < TEST arq() etc (lay a unit test)
  
  < able to other shade, Plot/* the stylepile
  < more Plot when eg Gump streams
  < better /ghost/ er 500: multiple G/gam/Pictures G/ive/Pictures
  
  < %%Acceptable<->%%Checkable:
  Plot signaling:
    ends ~ Eigh%%Fin=$eight
    Eigh commissions $eight|-eight to Y with %%Checkable
    < send Eigh a &storable image of -eight
     < this could be -eight.y.P?
       Live.y.P also, from %Search.
        the P should y&up to the producer of it
       then &selfThat encountering LyP from %Search,
        etc
  
  < Plot/Look/subtasks:
     starting: beginning,le-1: W:Lingo,Story**, til %%quiet
     oking: le2-3: of starting, exactly, til %%gotupto
     oked: of oking, vaguely Nine is so far ok|not,
  < Plot/Respond:
     repeatable instance of Travel/$t%SummerCat
     load the Stori for it
      < Aline in Story/vv/$t or Story/$t?
     a Travel/$t send to Travel/ing/$t-$i for runtime
  < Plot/** will want to continue, or:
     period of self analysis may -> ReNine
      then becoming ok
  
    < through Eigh**/-tll (thing looks like) to Plot/**-act
    < %Yingates are Y:-eight/-seven
    < thrashness dampeners: Nodar other mapstyles
    
Story generality
  < Yingu pause, &whyloop... 
    -wants back to the %%waits sources
    fastly codifying motivation to notice looping
   
   < tunneled R should wait until aboves @3? (sleeping or not)
     unless directly &Ring, as Ying@296...Y:Steps does
  
  < the pristine unconnected toplevel inside %SummerCat
    is the pile-to. get some stuff made... etc
     it leaves those &bal tracelets
    make a separate $me
    make W:I/... from ghosts
     %%eto unable to retract, must be constant signal
     nodes may delete etc?
     the Pearch that lv-ifies news,
      compile-checks stuff
      talking to websocket about names to wjs
    
  < Ying waiting for all &t waiting (%SummerCat)
  < highlight $D outside of Ying, ie Dy&inside!=Det
    e circuits:
     whether to Dome (and forward to &settlers)
     the new, or keep it on A branch for others to incorporate
      it appears to be the thing via others &t
  < -eight implies /-seven, etc
    seven gains c&type=gate|log (previous c&pi)
     drink?
  
  pi S, to a &throat
   the things that notice things
   pipe + settle?
  
  waves of unfolding mechanisms, locating simplicity
   leaving a C
  
  < Story oking Story starting, oking:
  < 3 should see all Checkables OK,
    else
     page(diffpic), page(accepting)+
     discard -gates until done
     also:
  < 2,3 etc should be within Story/**
     wantswander
  
  < to match fuzzily, -four only, etc
  
  < bisect the startup error
  < 0,1 sometimes merge?
  < &Yinge: drop stale Yingvoids across reset %Ying.
    er:NOb sometimes
  < Rescaping.
    notice which R:ruv mindbits are used
  
  to get onto text diff pipes, Y doing pi, could be pins
  < &Jx modulata, see &Acceptings
   < merge &Jx+&acting, hooks that do &Acceptings etc?
  < pipe have Y:Story**, assembled with:
  &actin = &acting + make pipe, etc for most nodes
   h - keys name: G&t,acting/name (simulate)
    h.* = more h for that thing
   the several things of acting join up
   something Te-ish turning to lv mot
    so Stori can instruct Y:Test
  as a Test
   < Plotting over the intro, doing a test,
     with some -six: Nodar pictures
   < Y handlery, io-hooking:
   < as a Test
  
  %TheTest pipeline:
    -eight & pull Stori**
    -> Nine/Eigh -> acceptable -> ReNine** -> push Stori**
   pull Stori -> Test/Nine:
    begins with &getThat,
    %%eto:K,pipe:Test,efrom:Test,species:1
    this allows &twineThat to find ^%%pipe,
    %%eto:K/**,pipe:Test,efrom:Eigh,species:1
    %%pipe:Test for everybody.
    Slope it out here, there
    find other parts of the Stori process, etc.
    intake what you replace:
     < to pull our push
        Eigh may pull %%acceptable,dige
     < to push our pull
        ReNine only push %%Parent ?
    comes down the pipeline somehow
     < all the way through:
      < Y:-seven parameters on encoding live...
        which you might be collaborating on
      < just apply patches to your idea of there to rebase
  
  nice ideas:
    brute diff around whole TheTest**
     showing where it was made linkey into Nine/Eigh
    pipelining as in io plumbing
     joining different paths
   
  Eigh diffs:
  < difference -> -eight/-seven &brackology
  < with more pipe:
   < s -> Y:Lineso, knowing:
     s** change per magic input tension field para.
      how to encode|mute things
      how to recycle index
       so we can merge tiny code changes fast,
        run out of entropy (index same)
        consuming from the index must be more pipe act?
     s** per line out (index)
   < difference joining index+
     < patch restatily regroups new|same or same|old
        to whole lines, like `diff`
  
  < -eight &brackology sum, spot any Story**
   < &wait_8: make pure Story or not -sevens
   < all the whiles to Story** separated from run
  
  < Plot deciding:
    which -eights to discard as fiddling,
    which -eights really matter (match exp)
    and whether we can continue the Plot,
     or subplots, from our current state
   
   begin:
    chases, oks D:beginning
   Gumping:
    selects jobs (testruns) to do
   
  < drain monday
  < sub easy ioings
  < colourings
  < Fiveplan
   < small scrollspaces should not scroll parents when maxed
   < scroll headings|lines on the left|right side 
  
  < fix occasional nob on Lingo%Peace:5 for Lingo%Peace:4
  
  see Story
  < auto The/vv -> The/Lingo? the Know tour
    or is it a Lingo 'beginning'?
     eg W/t/iooia has env|Launch stuff preamble,
       then dome 3 contains W:t/iooia and more domes
  

Yingu and Story
   Story finish, groups Yingu,
    tests with their &waits_8,
    lv of the s changing
     as osc visiting its C
   Yingu live/playback from &waits_8
  
  < put more id in &settle row
    esp on the %%waits,wants of &settle_7
  < &settle_7 notices when new version == a pushed version (%%for:settled)
    eg the regular %Pave!ready bothers %MayTwine &settle Know..$s
  < settle upward with %onlyish, eg %MayGansp <- .../%MayTwine%%thing
  
  < Story<->Gump, soft &settle everyone else
  < make go:
   completing the circuit, meanwhile:
   
  < new &waits_8 should fix at least half of:
  < test up:
   < wake on el:2|9, $s/$n pointer to the not yet node,
     so %twmt adheres from $s to $n
      see Rs&numberclicked
      < %Peace: assemble types sleep-agnostically
     and then %%eto:1,tw... gets to That
   < then To..$n comes back,
     having pushed itself to $later
     or having subscribed to changes to That %tw
  < sy&twinned, forget $p
  
  randoms:
  < %%eto clickshunt pseudosurprise
  < %%acty?
  < doublethrow: show first stack
  < try/catch when we Ring a whole step at once...
  < brackism, eg %%may:input
  
  # < indot Y nice:
  %Abodis,Yingu
   flashing lights
   pause, circuits, unify brackism
   way to consider the dome before running into it
   < explain/control go round
     sliders for attention span, energy
  < adopts %Nodar, when its not lining up with something
   < realtime nodes waiting/waking
  < exploding certain elements from within Ying,
    making rows, adjusting layout, scale
    &Yinge
     < coinciding &Yinge not lost
  %Abodo,Ying:
    scrolled window + onmousemove:
        var x = event.clientX, y = event.clientY,
        elementMouseIsOver = document.elementFromPoint(x, y);
     track anything, scroll everying
      to keep still relative to the mouse on update
  < %ball folds, aggregate "all ok"
   < brackdiff/%acty pop out
  < conclusion: bleep, bloop
    make go round nice
  
  %protoJ
   whole new all it takes:
    u mixing from @Search intake
    doing with that
     A &throat, &Ying or &Ring
      A-thing sets up A iterator @o2-@1
   with %Ying we may:
     display as a thing|thinkypile
     display as an appearance
  
  %SummerCat:
   for compiling nice code again, I:[neusiolaND]
   < for a Story (Gump actuation)
    < shrinks away eventually, contibuting:
    < runtime, several scales of it,
       as a %Yingbal (interactive) thing,
       as storable encodings of them, (&Ste*?)
      to become test data
      < %Zif wants to know how to work them
        runtime diffing
   < testrun etc
     also scooping up extents of Yingu smoke
     < debug Jpara+settled+testmode
       might be html
   %Jproto:
    < fix sometimes dupe %%eto
    < 4s&callback - possible override e
     < then handling the onclick event,
      < new Display inside
    < carve off history: Rc&b, yfuture...
      begins:
       J located in bc&sc&J (if Y:n)
       Rc&V is local history?
        dialect of two variables:
         in A, a J
      how/when it applies:
       J callback all inside R, as if Rc&N[0]
       Y seem good
        replace their previous syY, which was Yc&b?
      will need:
       Index climbing
    < Te
   %Jrunto:
      < Y:n the grounds, so they can mind
      < Y:u configures dialect, etc
      < Y:n,S, with try/catch liberally
          S for wandering through c&pin sections, domily
     
  Y|A
   leaving unfinished
    throw:
    < should be detectible (Ac&T.act?)
      aborts everything until catch,
       non-descendants, eg A:n continuing A:slow doing A:doing
       may not garbage A:slow. depends on lineage?
    T.hwack:
    < requiring the enclosing thing to know about T.hwack
     < or becomes a throw
   may be used in %Yingu to create works that may be done,
    eg encoding a certain way,
    displaying more stuff:
     giving an output Re-cipe, like &%Yingbal
  
  
  Index:
   < drains %twin, etc
   < for Q.c.* using &fiu for:
  @Near:
   Q<->P again, proxy or http
  @Search:
   < using of:js again. add dige lookup?
   < of:w 404 should el:9
   < Search:wjs should never think theyre ready if !wc&code
   &Ghodig:
    < cant update to a previous version
    < latest wjs:Yingmas if Know...wjs:Yingmas
  %Pring
   A bunching of things heading into them
   %Slope to see
   < check bunch of P are ready, wait max 2s
    < can speed up Qready (thing for batch) -> Qup (batch)
    < e:pull returns when ready (@Search Qup coordination)
     < G&t adopts %Elvoids it asyncs with (%JRom 8)
  
  < brackology tunnels?
   < %%dome as the most-separator
   < open column nicer
   < show %Aearch/@Search Ghost,
      args put later than t
      Ghost/$of should know its index:
  < singular %twin (index of eg of/args/t)
     
  
 CodeCode
  < dream up something simple
   Steps Dome
   / means z
    to complete & test a bunch of features:
    < %Code pointer more infinitely
    < allowing rearrange of W:g-j as list of $t
    < weirdness erupting, normal quiet
    < A == R, etc...
    < sending patches to your Search host,
    < jsba, tested against everything imported,
      and all remaining js code...
      < need.js for linenumbers: ServiceWorker might:
        return new Response(null, { "status" : 200 , "statusText" : "I am a custom service worker response!" });
    do the srj:
    https://artem.krylysov.com/blog/2020/07/28/lets-build-a-full-text-search-engine/
    
 
  < Words:
  < track <
  < boost<0 that ope=0.5
     the bit of nothing next to t being half it
  < not
  < hsl l is not dark enough
  < the %ein(C) interface for %_ting
  < ch()/G&c says harvester, put in A
  < me&way + Search from the top, its own mundws
  < me&t should know about ways inside ways
    most of them will static args
 %Slope
   finds neighbours
   the center of the findables
    %ball, %Cit, %Zavmo types of sprawl
 %Differ <- Textl
   text relationising lab
    defines %Here<->$P
     how to push, pull, what changed
      how to i/o or patch bits of them
    breaks down patches
     important lines leading into what changed
     chunks compare with each other,
      to get moves as low diff gone<->new chunks
     chunks accepted as forms
      for more chunks to be more acceptable
        when the same ish change occurs in many
      2 chunks should show the most residual bit of identity
    sees t y c sc amounts
     such that the same code works any model:
      %Code/%Line/%Ch
       everything slightly t, the name of something
        esp heading positioned, rare words
       c more the syntax
       sc the knowables
      %Cit/%nkness/%gkness/%someindexes/
       bits could be found in the code
    make steps for CodeMirror to unfold subdocs
   makes pointers into code,
    is wanted for:
     %Codo search, %Abodis pointers
     %Code unfolding
   logisticises processing:
    Babz translations resyncing parts
   know %keyword
    or the ones from such a Ghost
    &ind-ing for creativity
   chatbot
 T
   another thing-ink dripper:
        #        $he = Rc&N[0];
        #        $i = hes&inti = (hes&inti||0)+1;
        #        me&tsc,'%Zave',i+'th','y';
        #        i == 2 and debugger
Zave
  ghost not auto direction flipping?
  might be coinciding push and outofdate...
perl
  which version (got or spot) is best to elvis work to?
   it could be rebuilt from a forking clusterer
    javascript -> perl translation
  < Babz array[-1]
   perl is weird how it can take this ARRAY as a single argument:
    push @{$between[-1] ||= []}, $_;
cm
  folds open/close antiscroll
  likes <100 lines on screen
   < not Infinite height?
  ambient state checkup
   shui:casual cycle wants insurance from ...
  keys:
    Tab in \S\) should jump over 2 characters
    e:A+* elvis while paused
     something for tagging the line
  later:
  < regroup Foogla etc by %Code pointers
     curate into G/
     with similar to %tracting el:9 (drop) etc,
     wanting the human to go through it all
  < move over there, then much later:
    < import git history, as if names the whole time,
       and a W:j about the fractions/order of them
      bringing back Opera-era perl for elvising W-orkers
       and all the output channel plumbing etc
      `GIT_AUTHOR_DATE='2020-02-29 16:01:02+1200' git commit`
  