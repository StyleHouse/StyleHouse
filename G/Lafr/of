# th encoder
#me&tsc,"OF"

each in s&z {
    $D = Cye(n);
    Dy&C = n
    T.nN.push(D);
    Dc&of and continue
    
    me&ioty,D .length and throw "z", D
    !ny&toLines and throw "!lines", n
    Ds&dige = dig(Dc&s);
    $digl = dig(ny&toLines);
    $X = (1s&mem ||= {});
    $s = X[digl];
    if (s == null) {
        $Q = Cye([D.t,1,{of:'JaBabz',args:digl}]);
        $R;
        me.cby(n,&s{
            sy&R and return R = sy&R
        })
        !R and throw "canfindR"
        Qs&ghost = ny&toLines;
        ~>4 of-codes: J.t, D.t
        $w = me&t,R,Q;
        w and s = X[digl] = wc&s
    }
    if (s != null) {
        ~>4 of-coded: J.t, D.t
        Dc&s = s;
        Ds&digs = dig(s);
        Dc&of = ns&of;
    }
    else {
        ac(A,'waits',D)
    }
}
a&waits and throw "async W:of", a&waits
